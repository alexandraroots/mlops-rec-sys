name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black pylint pytest
        pip install -e .

    - name: Lint with flake8
      run: |
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src --count --max-complexity=10 --max-line-length=127 --statistics

    - name: Check formatting with black
      run: |
        black --check src/

    - name: Run pylint
      run: |
        pylint src/ --disable=all --enable=E,F --fail-under=8

    - name: Run unit tests
      run: |
        if [ -d "tests" ]; then
          python -m pytest tests/ -v --cov=src --cov-report=xml
        else
          echo "No tests directory found, skipping tests"
        fi

  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: docker/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}

  jobs:
    needs: build-and-push
    run:
      name: Run new container
      runs-on: ubuntu-latest
      env:
        SERVER_SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        USER_NAME: ${{ secrets.USER_NAME }}

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: save key
          run: |
            mkdir -p ~/.ssh
            echo "$SERVER_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

        - name: Create docker context
          run: docker context create --docker host=ssh://$USER_NAME@$SERVER_IP mlops_rec_sys

        - name: Set docker context
          run: docker context use mlops_rec_sys

        - name: Build the Docker container
          run: docker build -t mlops-rec-sys -f docker/Dockerfile .

        - name: Run the Docker container
          run: docker run -d --name mlops-server -p 50051:50051 mlops-rec-sys